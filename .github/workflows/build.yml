name: Building    # Nombre del workflow "Workflows define the jobs and steps that constitute build processes." (https://www.ibm.com/docs/en/urbancode-build/6.1.0?topic=creating-jobs-workflows)
on: [push]              # Se ejecuta cuando se hace push
jobs:             # "A JOB is a series of STEPS that constitute a process, usually a BUILD. Job steps are processed one at a time in the order you specify."
  building:
    runs-on: ubuntu-latest        # Entorno de ejecución (siempre ubuntu-lastest)
    steps:
      - uses: actions/checkout@v3 # Descargamos el repositorio

      - uses: actions/setup-python@v4 # Se instala python v4 (es la 3 ó superior)
        with:
          python-version: '3.10'

      - name: Install Poetry 
        uses: snok/install-poetry@v1

      - name: Install dependencies # La instalación de las dependencias SIEMPRE debe estar ANTES del TESTING
        run: poetry install

      - name: Testing
        run: poetry run pytest --junitxml=jest-junit.xml --cov=modeltools --cov-report=lcov --cov-report=xml

      - name: Test Report. # Muestra en el build el resultado de los test
        uses: dorny/test-reporter@v1 # Utilidad / Librería que muestra los resultados
        if: success() || failure()  # Queremos que muestre los test en todos los casos (fallen o no fallen)
        with:
          name: Test
          path: jest-junit.xml # El fichero se crea en la carpeta raíz del modeltools
          reporter: java-junit # Es el formato con el que se muestra. Hay muchos. Dejamos el que se usa por defecto

      - uses: devmasx/coverage-check-action@v1.2.0 # Añadimos coverage de los test de nuestro código
        with:
          type: lcov
          result_path: coverage.lcov # Hay que tener cuidado dónde se colocan los ficheros de salida para poner el path correcto
          min_coverage: 90 # Establecemos un valor mínimo del 90% de código cubierto por los test
          token: ${{ github.token }}

      - name: Building
        run: poetry build # Ejecuto un comando de consola en el repo.

      - name: Publish to GH Releases # Paso para publicar los binarios generados con el comendo "poetry build" en GitHub
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with: # Con "with" se indican los valores de los parámetros que tiene el ACTION de GitHub que estamos usando
          files: ${{ github.workspace }}/dist/* # Para ver que la carpeta dist se crea al ejecutar poetry build desde la ruta del workspace ( ${{ github.workspace }} ) 
